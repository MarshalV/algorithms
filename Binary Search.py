# Бинарный поиск (Binary Search): Эффективный алгоритм поиска элемента в отсортированном массиве.

"""Алгоритм двоичного поиска применяется для эффективного поиска элемента в отсортированном массиве. 
Он может использоваться в различных ситуациях, когда требуется найти элемент в упорядоченном списке, 
например, при поиске элемента в списке чисел, или при поиске индекса определенного элемента в упорядоченном массиве данных."""


def binary_search(arr, target):
    # Определяем функцию binary_search с двумя аргументами: arr - отсортированный массив, target - элемент, который мы ищем
    left, right = 0, len(arr) - 1
    # Устанавливаем начальные значения левой и правой границ массива
    while left <= right:
        # Пока левая граница не превышает правую границу
        mid = (left + right) // 2
        # Находим индекс среднего элемента массива
        if arr[mid] == target:
            # Если средний элемент равен целевому элементу, то возвращаем индекс среднего элемента
            return mid
        elif arr[mid] < target:
            # Если средний элемент меньше целевого элемента, сужаем диапазон поиска, ищем в правой половине массива
            left = mid + 1
        else:
            # Если средний элемент больше целевого элемента, сужаем диапазон поиска, ищем в левой половине массива
            right = mid - 1
    # Если элемент не найден, возвращаем -1
    return -1
    
    
# Пример списка чисел для поиска
arr = [1, 3, 5, 7, 9, 11, 13, 15]

# Целевой элемент, который мы ищем
target = 11

# Вызываем функцию binary_search для поиска элемента target в массиве arr
result = binary_search(arr, target)

# Выводим результат поиска
if result != -1:
    print("Элемент", target, "найден по индексу:", result)
else:
    print("Элемент", target, "не найден в массиве.")
